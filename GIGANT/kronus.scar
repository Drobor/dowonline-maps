--The Tomb World of Kronus by Fuggles--
--DC:FoK & SS version, 3rd party races and unit will need to added to the functions either by yourself, or me when I get around to it
--[[IMPORTS]]
import("ScarUtil.scar")
import("WXPScarUtil.scar")

--[[INITIALISATION]]
function onInit()
--FOW_RevealAll()
--setup
Rule_AddOneShot(players,0)
--check for power boost
Rule_AddIntervalDelay(powerPointCap,60,10)
--starts the blood pulse er...pulsing
Rule_AddInterval(BabyBloodPulse,120)
--removes fury bonus and then reapplies
Rule_AddIntervalDelay(speedunboost1,60,20)
--check if starport invaded
Rule_AddIntervalDelay(teleportCap,60,30)
--check for req boost
Rule_AddIntervalDelay(Req,60,40)
--removes repair bonus and then reapplies
Rule_AddIntervalDelay(buildunboost1,60,59)
--removes pop bonus and then reapplies
Rule_AddIntervalDelay(uncapping1,60,55)
--adds a bonus builder
Rule_AddInterval(buildcap2,300)
Rule_AddOneShot(bloodcurtain,5)


g_fury1=1
g_fury2=1
g_fury3=1
g_fury4=1
g_fury5=1
g_fury6=1
g_fury7=1
g_fury8=1
g_furyflag1=0
g_furyflag2=0
g_furyflag3=0
g_furyflag4=0
g_furyflag5=0
g_furyflag6=0
g_furyflag7=0
g_furyflag8=0
g_cap1=0
g_cap2=0
g_cap3=0
g_cap4=0
g_cap5=0
g_cap6=0
g_cap7=0
g_cap8=0
g_capflag1=0
g_capflag2=0
g_capflag3=0
g_capflag4=0
g_capflag5=0
g_capflag6=0
g_capflag7=0
g_capflag8=0
g_req=100
g_bonus1=0
g_bonus2=0
g_bonus3=0
g_bonus4=0
g_bonus5=0
g_bonus6=0
g_bonus7=0
g_bonus8=0
g_build1=0
g_build2=0
g_build3=0
g_build4=0
g_build5=0
g_build6=0
g_build7=0
g_build8=0
g_buildflag1=0
g_buildflag2=0
g_buildflag3=0
g_buildflag4=0
g_buildflag5=0
g_buildflag6=0
g_buildflag7=0
g_buildflag8=0

end


Scar_AddInit(onInit)


--[[FUNCTIONS]]
function players()

number_of_players=World_GetPlayerCount()

	if (number_of_players==2) then
	g_Player1 = World_GetPlayerAt(0)
	g_Player2 = World_GetPlayerAt(1)
       Rule_AddOneShot(restrict1,0)
       Rule_AddOneShot(restrict2,0)


elseif (number_of_players==3) then
	g_Player1 = World_GetPlayerAt(0)
	g_Player2 =World_GetPlayerAt(1)
	g_Player3 = World_GetPlayerAt(2)
       Rule_AddOneShot(restrict1,0)
       Rule_AddOneShot(restrict2,0)
       Rule_AddOneShot(restrict3,0)

      
elseif (number_of_players==4) then
	g_Player1 = World_GetPlayerAt(0)
	g_Player2 =World_GetPlayerAt(1)
	g_Player3 = World_GetPlayerAt(2)
	g_Player4 = World_GetPlayerAt(3)
       Rule_AddOneShot(restrict1,0)
       Rule_AddOneShot(restrict2,0)
       Rule_AddOneShot(restrict3,0)
      Rule_AddOneShot(restrict4,0)
     
elseif (number_of_players==5) then
	g_Player1 = World_GetPlayerAt(0)
	g_Player2 =World_GetPlayerAt(1)
	g_Player3 = World_GetPlayerAt(2)
	g_Player4 = World_GetPlayerAt(3)
	g_Player5= World_GetPlayerAt(4)
       Rule_AddOneShot(restrict1,0)
       Rule_AddOneShot(restrict2,0)
       Rule_AddOneShot(restrict3,0)
       Rule_AddOneShot(restrict4,0)
       Rule_AddOneShot(restrict5,0)

        elseif (number_of_players==6) then
	g_Player1 = World_GetPlayerAt(0)
	g_Player2 =World_GetPlayerAt(1)
	g_Player3 = World_GetPlayerAt(2)
	g_Player4 = World_GetPlayerAt(3)
	g_Player5= World_GetPlayerAt(4)
        g_Player6 = World_GetPlayerAt(5)
       Rule_AddOneShot(restrict1,0)
       Rule_AddOneShot(restrict2,0)
       Rule_AddOneShot(restrict3,0)
      Rule_AddOneShot(restrict4,0)
       Rule_AddOneShot(restrict5,0)
       Rule_AddOneShot(restrict6,0)
  
	elseif (number_of_players==7) then
	g_Player1 = World_GetPlayerAt(0)
	g_Player2 =World_GetPlayerAt(1)
	g_Player3 = World_GetPlayerAt(2)
	g_Player4 = World_GetPlayerAt(3)
	g_Player5= World_GetPlayerAt(4)
        g_Player6 = World_GetPlayerAt(5)
	g_Player7= World_GetPlayerAt(6)
       Rule_AddOneShot(restrict1,0)
       Rule_AddOneShot(restrict2,0)
       Rule_AddOneShot(restrict3,0)
       Rule_AddOneShot(restrict4,0)
       Rule_AddOneShot(restrict5,0)
       Rule_AddOneShot(restrict6,0)
       Rule_AddOneShot(restrict7,0)
end


EGroup_SetHealthInvulnerable("power", true)
end

function powerPointCap()
if (number_of_players==2) then
Rule_AddOneShot(powerPointCap2,0)
elseif (number_of_players==3) then
Rule_AddOneShot(powerPointCap3,0)
elseif (number_of_players==4) then
Rule_AddOneShot(powerPointCap4,0)
elseif (number_of_players==5) then
Rule_AddOneShot(powerPointCap5,0)
elseif (number_of_players==6) then
Rule_AddOneShot(powerPointCap6,0)
elseif (number_of_players==7) then
Rule_AddOneShot(powerPointCap7,0)
end
end


function powerPointCap2()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
		end
    		end

function powerPointCap3()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player3,true) then
       Rule_AddOneShot(player3power,0)
		end
    		end

function powerPointCap4()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player3,true) then
       Rule_AddOneShot(player3power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player4,true) then
        Rule_AddOneShot(player4power,0)
		end
    		end

function powerPointCap5()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player3,true) then
       Rule_AddOneShot(player3power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player4,true) then
        Rule_AddOneShot(player4power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player5,true) then
      Rule_AddOneShot(player5power,0)
		end
    		end

function powerPointCap6()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player3,true) then
       Rule_AddOneShot(player3power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player4,true) then
        Rule_AddOneShot(player4power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player5,true) then
      Rule_AddOneShot(player5power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player6,true) then
      Rule_AddOneShot(player6power,0)
		end
    		end

function powerPointCap7()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player3,true) then
       Rule_AddOneShot(player3power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player4,true) then
        Rule_AddOneShot(player4power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player5,true) then
      Rule_AddOneShot(player5power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player6,true) then
      Rule_AddOneShot(player6power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player7,true) then
       Rule_AddOneShot(player7power,0)
		end
    		end

function powerPointCap8()
if EGroup_IsCapturedByPlayer("eg_power_point",g_Player1,true) then
        Rule_AddOneShot(player1power,0)
elseif  EGroup_IsCapturedByPlayer("eg_power_point",g_Player2,true) then
       Rule_AddOneShot(player2power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player3,true) then
       Rule_AddOneShot(player3power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player4,true) then
        Rule_AddOneShot(player4power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player5,true) then
      Rule_AddOneShot(player5power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player6,true) then
      Rule_AddOneShot(player6power,0)
elseif EGroup_IsCapturedByPlayer("eg_power_point",g_Player7,true) then
       Rule_AddOneShot(player7power,0)
		end
    		end

--spaceport

function teleportCap()
if (number_of_players==2) then
Rule_AddOneShot(teleportCap2,0)
elseif (number_of_players==3) then
Rule_AddOneShot(teleportCap3,0)
elseif (number_of_players==4) then
Rule_AddOneShot(teleportCap4,0)
elseif (number_of_players==5) then
Rule_AddOneShot(teleportCap5,0)
elseif (number_of_players==6) then
Rule_AddOneShot(teleportCap6,0)
elseif (number_of_players==7) then
Rule_AddOneShot(teleportCap7,0)
end
end

function teleportCap2()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
		end
		end

function teleportCap3()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player3,true) then
Rule_AddOneShot(restoreteleporter3,0)
        EGroup_SetPlayerOwner("teleport", g_Player3)
  EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls Pavonis","Access to Spaceport")
		end
		end

function teleportCap4()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player3,true) then
Rule_AddOneShot(restoreteleporter3,0)
        EGroup_SetPlayerOwner("teleport", g_Player3)
  EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player4,true) then
Rule_AddOneShot(restoreteleporter4,0)
        EGroup_SetPlayerOwner("teleport", g_Player4)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls Pavonis","Access to Spaceport")
		end
		end

function teleportCap5()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player3,true) then
Rule_AddOneShot(restoreteleporter3,0)
        EGroup_SetPlayerOwner("teleport", g_Player3)
  EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player4,true) then
Rule_AddOneShot(restoreteleporter4,0)
        EGroup_SetPlayerOwner("teleport", g_Player4)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player5,true) then
Rule_AddOneShot(restoreteleporter5,0)
        EGroup_SetPlayerOwner("teleport", g_Player5)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls Pavonis","Access to Spaceport")
		end
		end

function teleportCap6()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player3,true) then
Rule_AddOneShot(restoreteleporter3,0)
        EGroup_SetPlayerOwner("teleport", g_Player3)
  EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player4,true) then
Rule_AddOneShot(restoreteleporter4,0)
        EGroup_SetPlayerOwner("teleport", g_Player4)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player5,true) then
Rule_AddOneShot(restoreteleporter5,0)
        EGroup_SetPlayerOwner("teleport", g_Player5)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player6,true) then
Rule_AddOneShot(restoreteleporter6,0)
        EGroup_SetPlayerOwner("teleport", g_Player6)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls Pavonis","Access to Spaceport")
		end
		end

function teleportCap7()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player3,true) then
Rule_AddOneShot(restoreteleporter3,0)
        EGroup_SetPlayerOwner("teleport", g_Player3)
  EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player4,true) then
Rule_AddOneShot(restoreteleporter4,0)
        EGroup_SetPlayerOwner("teleport", g_Player4)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player5,true) then
Rule_AddOneShot(restoreteleporter5,0)
        EGroup_SetPlayerOwner("teleport", g_Player5)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player6,true) then
Rule_AddOneShot(restoreteleporter6,0)
        EGroup_SetPlayerOwner("teleport", g_Player6)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player7,true) then
Rule_AddOneShot(restoreteleporter7,0)
        EGroup_SetPlayerOwner("teleport", g_Player7)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7 controls Pavonis","Access to Spaceport")
		end
		end

function teleportCap8()
	
if EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player1,true) then

        Rule_AddOneShot(restoreteleporter1,0)
        EGroup_SetPlayerOwner("teleport", g_Player1)
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls Pavonis","Access to Spaceport")
elseif  EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player2,true) then
 Rule_AddOneShot(restoreteleporter2,0)
        EGroup_SetPlayerOwner("teleport", g_Player2)
    EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player3,true) then
Rule_AddOneShot(restoreteleporter3,0)
        EGroup_SetPlayerOwner("teleport", g_Player3)
  EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player4,true) then
Rule_AddOneShot(restoreteleporter4,0)
        EGroup_SetPlayerOwner("teleport", g_Player4)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player5,true) then
Rule_AddOneShot(restoreteleporter5,0)
        EGroup_SetPlayerOwner("teleport", g_Player5)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player6,true) then
Rule_AddOneShot(restoreteleporter6,0)
        EGroup_SetPlayerOwner("teleport", g_Player6)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls Pavonis","Access to Spaceport")
elseif EGroup_IsCapturedByPlayer("eg_teleport_point",g_Player7,true) then
Rule_AddOneShot(restoreteleporter7,0)
        EGroup_SetPlayerOwner("teleport", g_Player7)
 EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7 controls Pavonis","Access to Spaceport")
		end
		end

function player1power()
Player_AddResource(g_Player1,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1  controls the Vandean Coast","Power resource gained")
end

function player2power()
Player_AddResource(g_Player2,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2  controls the Vandean Coast","Power resource gained")
end

function player3power()
Player_AddResource(g_Playe3,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3  controls the Vandean Coast","Power resource gained")
end

function player4power()
Player_AddResource(g_Player4,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls the Vandean Coast","Power resource gained")
end

function player5power()
Player_AddResource(g_Player5,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5  controls the Vandean Coast","Power resource gained")
end

function player6power()
Player_AddResource(g_Player6,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6  controls the Vandean Coast","Power resource gained")
end

function player7power()
Player_AddResource(g_Player7,RT_Power,80)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7  controls the Vandean Coast","Power resource gained")
end




function restrict1()
if Player_IsAlive(g_Player1) then
g_player1race = Player_GetRaceName(g_Player1)
if (g_player1race == "eldar_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "necron_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "guard_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_playe1race == "ork_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "chaos_marine_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "tau_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "sisters_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "dark_eldar_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "blacktemplar_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "steel_legion_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
elseif (g_player1race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player1, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player1,"marine_personalteleporter_research")
end
end
end

function restrict2()
if Player_IsAlive(g_Player2) then
g_player2race = Player_GetRaceName(g_Player2)
if (g_player2race == "eldar_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "necron_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "guard_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_playe2race == "ork_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "chaos_marine_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "tau_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "sisters_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "dark_eldar_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "blacktemplar_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "steel_legion_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
elseif (g_player2race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player2, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player2,"marine_personalteleporter_research")
end
end
end

function restrict3()
if Player_IsAlive(g_Player3) then
g_player3race = Player_GetRaceName(g_Player3)
if (g_player3race == "eldar_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "necron_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "guard_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_playe3race == "ork_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "chaos_marine_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "tau_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "sisters_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "dark_eldar_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "blacktemplar_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "steel_legion_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
elseif (g_player3race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player3, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player3,"marine_personalteleporter_research")
end
end
end

function restrict4()
if Player_IsAlive(g_Player4) then
g_player4race = Player_GetRaceName(g_Player4)
if (g_player4race == "eldar_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "necron_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "guard_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_playe4race == "ork_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "chaos_marine_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "tau_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "sisters_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "dark_eldar_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "blacktemplar_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "steel_legion_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
elseif (g_player4race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player4, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player4,"marine_personalteleporter_research")
end
end
end

function restrict5()
if Player_IsAlive(g_Player5) then
g_player5race = Player_GetRaceName(g_Player5)
if (g_player5race == "eldar_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "necron_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "guard_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_playe5race == "ork_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "chaos_marine_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "tau_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "sisters_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "dark_eldar_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "blacktemplar_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "steel_legion_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
elseif (g_player5race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player5, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player5,"marine_personalteleporter_research")
end
end
end

function restrict6()
if Player_IsAlive(g_Player6) then
g_player6race = Player_GetRaceName(g_Player6)
if (g_player6race == "eldar_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "necron_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "guard_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_playe6race == "ork_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "chaos_marine_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "tau_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "sisters_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "dark_eldar_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "blacktemplar_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "steel_legion_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
elseif (g_player6race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player6, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player6,"marine_personalteleporter_research")
end
end
end


function restrict7()
if Player_IsAlive(g_Player7) then
g_player7race = Player_GetRaceName(g_Player7)
if (g_player7race == "eldar_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "necron_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "guard_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_playe7race == "ork_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "chaos_marine_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "tau_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "sisters_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "dark_eldar_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "blacktemplar_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "steel_legion_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
elseif (g_player7race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player7, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player7,"marine_personalteleporter_research")
end
end
end

function restrict8()
if Player_IsAlive(g_Player8) then
g_player8race = Player_GetRaceName(g_Player8)
if (g_player8race == "eldar_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "necron_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "guard_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_playe8race == "ork_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "chaos_marine_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "tau_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "sisters_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "dark_eldar_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "blacktemplar_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "steel_legion_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
elseif (g_player8race == "inquisition_daemonhunt_race") then
Player_RestrictSquad(g_Player8, "space_marine_squad_tactical")
Player_RestrictResearch(g_Player8,"marine_personalteleporter_research")
end
end
end

--fury
function Rule_speedboost1()
g_furyflag1= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury1, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player1 )

end 

end

function Rule_speedboost2()
g_furyflag2= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury2, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player2 )

end 

end


function Rule_speedboost3()
g_furyflag3= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury3, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player3 )

end 

end


function Rule_speedboost4()
g_furyflag4= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury4, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player4)

end 

end


function Rule_speedboost5()
g_furyflag5= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury5, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player5 )

end 

end


function Rule_speedboost6()
g_furyflag6= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury6, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player6 )

end 

end


function Rule_speedboost7()
g_furyflag7= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury7, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player7 )

end 
end

function Rule_speedboost8()
g_furyflag8= 1
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury8, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player8 )

end 
end

--fuggles
function fury()

if EGroup_IsCapturedByPlayer("eg_fury_point",g_Player1,true) then
Rule_AddOneShot(speedcheck1,0)
      EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls the Eres Badlands","Player 1 is filled with Fury")
elseif  EGroup_IsCapturedByPlayer("eg_fury_point",g_Player2,true) then
 Rule_AddOneShot(speedcheck2,0)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls the Eres Badlands","Player 2 is filled with Fury")    
elseif EGroup_IsCapturedByPlayer("eg_fury_point",g_Player3,true) then
 Rule_AddOneShot(speedcheck3,0)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls the Eres Badlands","Player 3 is filled with Fury")
elseif EGroup_IsCapturedByPlayer("eg_fury_point",g_Player4,true) then
Rule_AddOneShot(speedcheck4,0)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls the Eres Badlands","Player 4 is filled with Fury")
elseif EGroup_IsCapturedByPlayer("eg_fury_point",g_Player5,true) then
 Rule_AddOneShot(speedcheck5,0)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls the Eres Badlands","Player 5 is filled with Fury")
elseif EGroup_IsCapturedByPlayer("eg_fury_point",g_Player6,true) then
   Rule_AddOneShot(speedcheck6,0)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls the Eres Badlands","Player 6 is filled with Fury")
elseif EGroup_IsCapturedByPlayer("eg_fury_point",g_Player7,true) then
Rule_AddOneShot(speedcheck7,0)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7 controls the Eres Badlands","Player 7 is filled with Fury")
		end
		end

function Rule_speedboost12()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury1, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player1 )

end 

end

function Rule_speedboost22()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury2, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player2 )

end 

end


function Rule_speedboost32()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury3, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player3 )

end 

end


function Rule_speedboost42()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury4, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player4)

end 

end


function Rule_speedboost52()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury5, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player5 )

end 

end


function Rule_speedboost62()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury6, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player6 )

end 

end


function Rule_speedboost72()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury7, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player7 )

end 
end

function Rule_speedboost82()
squad_list = 
{
"eldar_bonesinger",
"eldar_farseer",
"eldar_dark_reaper_exarch",
"eldar_fire_dragon",
"eldar_fire_dragon_exarch",
"eldar_guardian",
"eldar_harlequins",
"eldar_warlock",
"eldar_warlock_seer",
"eldar_warp_spider",
"eldar_warp_spider_exarch",
"eldar_fire_prism",
"eldar_falcon_grav_tank",
"eldar_grav_platform",
"eldar_grav_platform_brightlance",
"eldar_vypers",
"eldar_avatar",
"eldar_wraithlord",
"eldar_rangers",
"eldar_banshee",
"eldar_banshee_exarch",
"eldar_autarch",
"eldar_dire_avenger",
"eldar_dire_avenger_exarch",
"eldar_falcon_grav_tank_codex",
"eldar_harlequin_troupe_leader",
"eldar_harlequin_troupe_master",
"eldar_scorpion_ii",
"eldar_storm_guardian",
"eldar_striking_scorpion",
"eldar_striking_scorpion_exarch",
"eldar_vyper_codex",
"eldar_wave_serpent",
"eldar_wraith_guard",
"necron_basic_warrior",
"necron_builder_scarab",
"necron_destroyer",
"necron_flayed_one",
"necron_heavy_destroyer",
"necron_immortal",
"necron_lord",
"necron_lord_destroyer",
"necron_pariah",
"necron_scarabs",
"necron_tomb_spyder",
"necron_wraith",
"necron_flayed_one_infiltrate",
"necron_restored_monolith",
"chaos_aspiring_champion",
"chaos_aspiring_champion_cultist",
"chaos_cultist",
"chaos_daemon_prince",
"chaos_defiler",
"chaos_horror",
"chaos_khorne_beserker",
"chaos_lord",
"chaos_marine_bolter",
"chaos_obliterator",
"chaos_possessed_marine",
"chaos_predator",
"chaos_raptor",
"chaos_raptor_aspiring_champion",
"chaos_rhino",
"chaos_slave",
"chaos_sorcerer",
"chaos_banner",
"chaos_berzerker_champion",
"chaos_close_combat_marine",
"chaos_daemon_prince_hq",
"chaos_daemonettes",
"chaos_khorne_berserker_chosen",
"chaos_khorne_berserker_codex",
"chaos_land_raider",
"chaos_lord_khorne",
"chaos_lord_nurgle",
"chaos_lord_slaanesh",
"chaos_lord_undivided",
"chaos_lord_sp_msd01",
"chaos_marine_bolter_marked",
"chaos_marine_chosen",
"chaos_marine_havoc",
"chaos_marine_icon_bearer",
"chaos_noise_champion",
"chaos_noise_marine",
"chaos_noise_marine_chosen",
"chaos_noise_marine_codex",
"chaos_noise_marine_havoc",
"chaos_plague_champion",
"chaos_plague_marine",
"chaos_plague_marine_chosen",
"chaos_plague_marine_codex",
"chaos_plague_marine_havoc",
"chaos_rubric_marine",
"chaos_rubric_marine_chosen",
"chaos_rubric_marine_codex",
"chaos_skull_champion",
"chaos_terminator",
"chaos_vindicator",
"guard_heavy_weapons_team",
"guard_infantry_guardsmen",
"guard_infantry_guardsmen_sergeant",
"guard_infantry_kasrkin",
"guard_infantry_kasrkin_sergeant",
"guard_infantry_ogryn",
"guard_infantry_ogryn_sergeant",
"guard_leaders_assassin",
"guard_leaders_captain",
"guard_leaders_commissar",
"guard_leaders_commissar_command_squad",
"guard_leaders_priest",
"guard_leaders_priest_command_squad",
"guard_leaders_psyker",
"guard_leaders_psyker_command_squad",
"guard_support_enginseer",
"guard_vehicles_baneblade",
"guard_vehicles_basilisk",
"guard_vehicles_chimera",
"guard_vehicles_hellhound",
"guard_vehicles_lemanruss",
"guard_vehicles_sentinel",
"grey_knights_justicar",
"guard_colonel",
"guard_infantry_guardsmen_af",
"guard_infantry_guardsmen_command_squad",
"guard_infantry_guardsmen_conscript",
"guard_infantry_guardsmen_medic",
"guard_infantry_guardsmen_support",
"guard_infantry_guardsmen_veteran",
"guard_infantry_inquisitorial_stormtrooper",
"guard_infantry_inquisitorial_stormtrooper_sergeant",
"guard_infantry_master_vox_command_squad",
"guard_infantry_medic_command_squad",
"guard_infantry_standard_bearer_command_squad",
"guard_leaders_assassin_eversor",
"guard_leaders_assassin_vindicare",
"guard_lieutenant",
"guard_servo_skull",
"guard_skull_probe",
"guard_valkyrie_dropship",
"guard_vehicles_chimera_kronus",
"guard_vehicles_gk_dreadnought",
"guard_vehicles_gk_land_raider_crusader",
"guard_vehicles_laser_destroyer",
"guard_vehicles_lemanruss_1",
"guard_vehicles_lemanruss_ace",
"guard_vehicles_lemanruss_conqueror",
"guard_vehicles_lemanruss_conqueror_ace",
"guard_vehicles_lemanruss_conqueror_troop",
"guard_vehicles_lemanruss_demolisher",
"guard_vehicles_lemanruss_demolisher_ace",
"guard_vehicles_lemanruss_exterminator",
"guard_vehicles_lemanruss_exterminator_ace",
"guard_vehicles_lemanruss_exterminator_troop",
"guard_vehicles_lemanruss_troop",
"guard_vehicles_lemanruss_vanquisher",
"guard_vehicles_lemanruss_vanquisher_ace",
"guard_vehicles_lemanruss_vanquisher_command",
"guard_vehicles_sentinel_cadian",
"guard_vehicles_thunderer",
"ork_armored_nob",
"ork_bad_dok",
"ork_boy",
"ork_flash_git",
"ork_grot",
"ork_killa_kan",
"ork_looted_tank",
"ork_mek_boy",
"ork_nob",
"ork_nob_leader",
"ork_shoota_boy",
"ork_squiggoth",
"ork_stormboy",
"ork_tankbusta",
"ork_trukk",
"ork_warboss",
"ork_wartrak",
"ork_banner",
"ork_gunwagon",
"ork_kommando",
"ork_kommandoz_nob_leader",
"ork_nob_kommando",
"ork_nob_retinue",
"ork_ard_boy",
"apothecary",
"assault_marine",
"chaplain",
"dreadnought",
"dreadnought_hellfire_variant",
"force_commander",
"grey_knights",
"land_raider",
"librarian",
"predator",
"rhino",
"scout_marine",
"sergeant",
"sergeant_assault_marine",
"servitor",
"skull_probe",
"space_marine_tactical_bolter",
"terminator",
"terminator_assault",
"whirlwind",
"command_squad_apothecary",
"command_squad_banner_bearer",
"command_squad_company_champion",
"command_squad_sergeant",
"command_squad_space_marine",
"command_squad_space_marine_cc",
"damocles",
"dreadnought_codex",
"dreadnought_codex_relay",
"dreadnought_hellfire_relay",
"dreadnought_mortis",
"dreadnought_relay",
"first_company_veteran_marine",
"first_company_veteran_marine_cc",
"first_company_veteran_marine_cc_relay",
"first_company_veteran_marine_relay",
"first_company_veteran_sergeant",
"first_company_veteran_sergeant_cc",
"land_raider_crusader",
"land_raider_prometheus",
"land_speeder_tornado",
"land_speeder_typhoon",
"land_speeder",
"land_speeder_variant",
"marine_banner",
"razorback",
"sergeant_devastator",
"sergeant_terminator",
"space_marine_devastator",
"techmarine",
"space_marine_tactical_bolter_relay",
"thunderhawk",
"vindicator",
"tau_broadside_battlesuits",
"tau_builder",
"tau_commander",
"tau_crisis_suit",
"tau_devilfish_troop_carrier",
"tau_drone_harbinger",
"tau_drone_squad",
"tau_ethereal",
"tau_fire_warrior",
"tau_greater_knarloc",
"tau_hammerhead_gunship",
"tau_harbinger_drones",
"tau_kroot_carnivore",
"tau_kroot_hound",
"tau_kroot_shaper",
"tau_pathfinder",
"tau_shasui_fire_warrior",
"tau_shasui_fire_warrior_bodyguard",
"tau_shasvre_stealth_suit",
"tau_shield_drone",
"tau_skyray",
"tau_stealth_suit",
"tau_vespid_auxiliary",
"tau_vespid_strain_leader",
"tau_assault_drone",
"tau_attack_drone_commander_x89",
"tau_bonded_fire_warrior",
"tau_bonded_fire_warrior_shasui",
"tau_broadside_battlesuit_shasvre",
"tau_crisis_suit_commander_bodyguard",
"tau_guevesa_auxiliary",
"tau_guevesa_ui",
"tau_gun_drone",
"tau_gun_drone_squad",
"tau_heavy_gun_drone",
"tau_marker_drone",
"tau_piranha_skimmer",
"tau_shield_drone_xv89_commander",
"tau_sniper_drone",
"tau_spotter",
"tau_tetra_skimmer",
"tau_xv8_crisis_suit",
"tau_xv81_crisis_suit",
"tau_xv81_crisis_suit_bodyguard",
"tau_xv89_crisis_suit",
"tau_xv89_crisis_suit_shasvre",
"tau_xv_25_stealth_suit",
"tau_xv_89_commander",
"tau_xv_89_commander_sp",
"space_marine_hq",
"space_marine_turret_bolter",
"space_marine_turret_missile_sp",
"space_marine_vehicle_building",
"space_marine_orbital_relay",
"space_marine_listening_post",
"space_marine_barracks",
"space_marine_armoury",
"chaos_armoury",
"chaos_greater_sacrificial_circle",
"chaos_hq",
"chaos_listening_post",
"chaos_machine_pit",
"chaos_sacrificial_circle",
"chaos_temple",
"chaos_turret_bolter",
"chaos_turret_missile_launcher_sp",
"eldar_aspect_portal",
"eldar_hq",
"eldar_listening_post",
"eldar_soul_shrine",
"eldar_support_portal",
"eldar_webway_gate",
"guard_hq",
"guard_infantry",
"guard_listening_post",
"guard_mars_pattern",
"guard_mechanized",
"guard_tactica",
"guard_turret_heavy_bolter",
"guard_turret_missile_launcher_sp",
"monolith",
"necron_forbidden_archive",
"necron_greater_summoning_core",
"necron_listening_post",
"necron_summoning_core",
"necron_turret",
"necron_turret_missile_sp",
"necron_plasma_generator",
"ork_boy_hut",
"ork_hq",
"ork_mek_shop",
"ork_pile_o_guns",
"ork_waagh_banner",
"ork_waagh_banner_missile_sp",
"ork_waagh_banner_turret_sp",
"tau_barracks",
"tau_hq",
"tau_kroot_nest",
"tau_listening_post",
"tau_missile_turret_sp",
"tau_research_building",
"tau_shrine_of_kauyon",
"tau_shrine_of_montka",
"tau_shrine_of_purpose",
"tau_turret_sp",
"tau_vehicle_building",
"templar_assault_initiate",
"templar_attack_bike",
"templar_castellan",
"templar_chaplain",
"templar_command_squad_apothecary",
"templar_command_squad_banner_bearer",
"templar_command_squad_champion",
"templar_command_squad_initiate",
"templar_command_squad_sergeant",
"templar_damocles",
"templar_deathwind_drop_pod",
"templar_dreadnought",
"templar_dreadnought_codex",
"templar_dreadnought_mortis",
"templar_emperor_champion",
"templar_initiate",
"templar_initiate_cc",
"templar_initiate_combat",
"templar_land_raider",
"templar_land_raider_crusader",
"templar_land_raider_prometheus",
"templar_land_speeder_tornado",
"templar_land_speeder_typhoon",
"templar_marshall",
"templar_neophyte",
"templar_neophyte_cc",
"templar_predator",
"templar_razorback",
"templar_rhino",
"templar_servitor",
"templar_skull_probe",
"templar_sword_brethren",
"templar_sword_brethren_cc",
"templar_sword_brethren_claws",
"templar_terminator",
"templar_terminator_assault",
"templar_vindicator",
"sisters_holy_reliquary",
"sisters_hq",
"sisters_infantry",
"sisters_listening_post",
"sisters_mines",
"sisters_plasma_generator",
"sisters_sanctuary",
"sisters_shrine",
"sisters_thermo_plasma",
"sisters_turret_flamer",
"sisters_vehicle_building",
"sisters_ascension_angel",
"sisters_assasin",
"sisters_battle_sister",
"sisters_canoness",
"sisters_celestian",
"sisters_celestian_imagifer",
"sisters_confessor",
"sisters_exorcist_tank",
"sisters_immolator_tank",
"sisters_lightning",
"sisters_living_saint",
"sisters_missionary",
"sisters_penitent_engine",
"sisters_repentia",
"sisters_repentia_mistress",
"sisters_rhino",
"sisters_seraphim",
"sisters_servitor",
"sisters_veteran_superior",
"sisters_veteran_superior_celestian",
"sisters_veteran_superior_seraphim",
"dark_eldar_dais_of_destruction",
"dark_eldar_infantry_hellion",
"dark_eldar_infantry_hellion_leader",
"dark_eldar_infantry_mandrake",
"dark_eldar_infantry_scourge",
"dark_eldar_infantry_scourge_leader",
"dark_eldar_infantry_warp_beast",
"dark_eldar_infantry_warp_beast_leader",
"dark_eldar_infantry_warrior",
"dark_eldar_infantry_warrior_leader",
"dark_eldar_infantry_wych",
"dark_eldar_infantry_wych_leader",
"dark_eldar_leader_archon",
"dark_eldar_leader_haemonculus",
"dark_eldar_leader_incubus",
"dark_eldar_support_slave",
"dark_eldar_slave_murdered",
"dark_eldar_torture_pit_corpse",
"dark_eldar_vehicle_raider",
"dark_eldar_vehicle_ravager",
"dark_eldar_vehicle_reaver",
"dark_eldar_vehicle_talos",
"dark_eldar_haemonculus_laboratory",
"dark_eldar_hall_of_blood",
"dark_eldar_hq",
"dark_eldar_listening_post",
"dark_eldar_plasma_generator",
"dark_eldar_skimmer_shop",
"dark_eldar_slave_caravel",
"dark_eldar_soul_cage",
"dark_eldar_thermo_plasma",
"dark_eldar_wych_cult_arena",
"chaos_hell_talon",
"eldar_nightwing",
"necron_deceiver",
"guard_vehicles_marauder",
"tempest",
"tau_barracuda",
"ork_fighta_bomba",
"steel_legion_cavalry_rough_rider",
"steel_legion_cavalry_rough_rider_sergeant",
"steel_legion_hero_uriah_jacobus",
"steel_legion_hero_yarrick",
"steel_legion_infantry_commissar",
"steel_legion_infantry_heavy",
"steel_legion_infantry_heavy_2",
"steel_legion_infantry_lieutenant",
"steel_legion_infantry_pioneer",
"steel_legion_infantry_sergeant",
"steel_legion_infantry_stormtrooper",
"steel_legion_infantry_stormtrooper_deepstrike",
"steel_legion_infantry_stormtrooper_sergeant",
"steel_legion_infantry_troop",
"steel_legion_infantry_troop_conscripted",
"steel_legion_tank_basilisk",
"steel_legion_tank_chimera",
"steel_legion_tank_chimera_armoured_fist",
"steel_legion_tank_chimera_autocannon",
"steel_legion_tank_conqueror",
"steel_legion_tank_cyclops",
"steel_legion_tank_demolisher",
"steel_legion_tank_destroyer",
"steel_legion_tank_executioner",
"steel_legion_tank_exterminator",
"steel_legion_tank_hellhound",
"steel_legion_tank_leman_russ_rap",
"steel_legion_tank_salamander",
"steel_legion_tank_sentinel",
"steel_legion_tank_stormblade",
"steel_legion_tank_stormsword",
"steel_legion_tank_thunderer",
"steel_legion_tank_trojan",
"steel_legion_tank_vanquisher",
"inquisition_archivist",
"inquisition_bodyguard",
"inquisition_bodyguard_special_weapon",
"inquisition_chimera_transport",
"inquisition_death_cultist",
"inquisition_dreadnought_assault",
"inquisition_dreadnought_support",
"inquisition_grey_knight_hero",
"inquisition_grey_knights",
"inquisition_grey_knights_justicar",
"inquisition_grey_knights_terminator",
"inquisition_grey_knights_terminator_justicar",
"inquisition_inquisitor_acolyte",
"inquisition_inquisitor_lord",
"inquisition_land_raider",
"inquisition_land_raider_crusader",
"inquisition_rhino",
"inquisition_scholars",
"inquisition_scholars_astropath",
"inquisition_scholars_calculi_logi",
"inquisition_scholars_exorcist",
"inquisition_servitor_maintenance",
"inquisition_servitor_melee",
"inquisition_servitor_weapon",
"inquisition_servo_skull",
"inquisition_shock_troops",
"inquisition_shock_troops_sergeant",
"inquisition_transport_thunderhawk",
"inquisition_transport_valkyrie",
}

modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "speed_maximum_modifier", MUT_Multiplication, false, g_fury8, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player8 )

end 
end


function speedunboost1()
if (g_furyflag1 == 1) then
g_fury1=0.8333339
Rule_AddOneShot(Rule_speedboost12,0)
g_furyflag1 = 0
end
Rule_AddOneShot(speedunboost2,0)
end

function speedunboost2()
if (g_furyflag2 == 1) then
g_fury2=0.8333339
Rule_AddOneShot(Rule_speedboost22,0)
g_furyflag2 = 0
end
if (number_of_players==2) then
Rule_AddOneShot(fury,0)
elseif (number_of_players==3) then
Rule_AddOneShot(speedunboost3,0)
elseif (number_of_players==4) then
Rule_AddOneShot(speedunboost3,0)
elseif (number_of_players==5) then
Rule_AddOneShot(speedunboost3,0)
elseif (number_of_players==6) then
Rule_AddOneShot(speedunboost3,0)
elseif (number_of_players==7) then
Rule_AddOneShot(speedunboost3,0)
end
end


function speedunboost3()
if (g_furyflag3 == 1) then
g_fury3=0.8333339
Rule_AddOneShot(Rule_speedboost32,0)
g_furyflag3 = 0
end
if (number_of_players==3) then
Rule_AddOneShot(fury,0)
elseif (number_of_players==4) then
Rule_AddOneShot(speedunboost4,0)
elseif (number_of_players==5) then
Rule_AddOneShot(speedunboost4,0)
elseif (number_of_players==6) then
Rule_AddOneShot(speedunboost4,0)
elseif (number_of_players==7) then
Rule_AddOneShot(speedunboost4,0)
end
end

function speedunboost4()
if (g_furyflag4 == 1) then
g_fury4=0.8333339
Rule_AddOneShot(Rule_speedboost42,0)
g_furyflag4 = 0
end
if (number_of_players==4) then
Rule_AddOneShot(fury,0)
elseif (number_of_players==5) then
Rule_AddOneShot(speedunboost5,0)
elseif (number_of_players==6) then
Rule_AddOneShot(speedunboost5,0)
elseif (number_of_players==7) then
Rule_AddOneShot(speedunboost5,0)
end
end

function speedunboost5()
if (g_furyflag5 == 1) then
g_fury5=0.8333339
Rule_AddOneShot(Rule_speedboost52,0)
g_furyflag5 = 0
end
if (number_of_players==5) then
Rule_AddOneShot(fury,0)
elseif (number_of_players==6) then
Rule_AddOneShot(speedunboost6,0)
elseif (number_of_players==7) then
Rule_AddOneShot(speedunboost6,0)
end
end

function speedunboost6()
if (g_furyflag6 == 1) then
g_fury6=0.8333339
Rule_AddOneShot(Rule_speedboost62,0)
g_furyflag6 = 0
end
if (number_of_players==6) then
Rule_AddOneShot(fury,0)
elseif (number_of_players==7) then
Rule_AddOneShot(speedunboost7,0)
end
end

function speedunboost7()
if (g_furyflag7 == 1) then
g_fury7=0.8333339
Rule_AddOneShot(Rule_speedboost72,0)
g_furyflag7 = 0
end
Rule_AddOneShot(fury,0)
end

function speedunboost8()
if (g_furyflag8 == 1) then
g_fury8=0.8333339
Rule_AddOneShot(Rule_speedboost82,0)
g_furyflag8 = 0
end
Rule_AddOneShot(fury,0)
end

function speedcheck1()
if (g_furyflag1 == 0) then
Rule_AddOneShot(fury1new,0)
elseif (g_furyflag1 == 1)
then
Rule_AddOneShot(fury1old,0)
end
end


function fury1new()
g_furyflag1 = 1
g_fury1= 1.2
Rule_AddOneShot(Rule_speedboost1,0)
end

function fury1old()
g_fury1= 1
Rule_AddOneShot(Rule_speedboost1,0)
end

function speedcheck2()
if (g_furyflag2 == 0) then
Rule_AddOneShot(fury2new,0)
elseif (g_furyflag2 == 1)
then
Rule_AddOneShot(fury2old,0)
end
end


function fury2new()
g_furyflag2 = 1
g_fury2= 1.2
Rule_AddOneShot(Rule_speedboost2,0)
end

function fury2old()
g_fury2= 1
Rule_AddOneShot(Rule_speedboost2,0)
end

function speedcheck3()
if (g_furyflag3 == 0) then
Rule_AddOneShot(fury3new,0)
elseif (g_furyflag3 == 1)
then
Rule_AddOneShot(fury3old,0)
end
end


function fury3new()
g_furyflag3 = 1
g_fury3= 1.2
Rule_AddOneShot(Rule_speedboost3,0)
end

function fury3old()
g_fury3= 1
Rule_AddOneShot(Rule_speedboost3,0)
end

function speedcheck4()
if (g_furyflag4 == 0) then
Rule_AddOneShot(fury4new,0)
elseif (g_furyflag4 == 1)
then
Rule_AddOneShot(fury4old,0)
end
end


function fury4new()
g_furyflag4 = 1
g_fury4= 1.2
Rule_AddOneShot(Rule_speedboost4,0)
end

function fury4old()
g_fury4= 1
Rule_AddOneShot(Rule_speedboost4,0)
end

function speedcheck5()
if (g_furyflag5 == 0) then
Rule_AddOneShot(fury5new,0)
elseif (g_furyflag5 == 1)
then
Rule_AddOneShot(fury5old,0)
end
end


function fury5new()
g_furyflag5 = 1
g_fury5= 1.2
Rule_AddOneShot(Rule_speedboost5,0)
end

function fury5old()
g_fury5= 1
Rule_AddOneShot(Rule_speedboost5,0)
end

function speedcheck6()
if (g_furyflag6 == 0) then
Rule_AddOneShot(fury6new,0)
elseif (g_furyflag6 == 1)
then
Rule_AddOneShot(fury6old,0)
end
end


function fury6new()
g_furyflag6 = 1
g_fury6= 1.2
Rule_AddOneShot(Rule_speedboost6,0)
end

function fury6old()
g_fury6= 1
Rule_AddOneShot(Rule_speedboost6,0)
end

function speedcheck7()
if (g_furyflag7 == 0) then
Rule_AddOneShot(fury7new,0)
elseif (g_furyflag7 == 1)
then
Rule_AddOneShot(fury7old,0)
end
end


function fury7new()
g_furyflag7 = 1
g_fury7= 1.2
Rule_AddOneShot(Rule_speedboost7,0)
end

function fury7old()
g_fury7= 1
Rule_AddOneShot(Rule_speedboost7,0)
end

function speedcheck8()
if (g_furyflag8 == 0) then
Rule_AddOneShot(fury8new,0)
elseif (g_furyflag8 == 1)
then
Rule_AddOneShot(fury8old,0)
end
end


function fury8new()
g_furyflag8 = 1
g_fury8= 1.2
Rule_AddOneShot(Rule_speedboost8,0)
end

function fury8old()
g_fury8= 1
Rule_AddOneShot(Rule_speedboost8,0)
end

function speedreset()
Rule_AddOneShot(speedunboost1,0)
Rule_AddOneShot(speedunboost2,0)
Rule_AddOneShot(speedunboost3,0)
Rule_AddOneShot(speedunboost4,0)
Rule_AddOneShot(speedunboost5,0)
Rule_AddOneShot(speedunboost6,0)
Rule_AddOneShot(speedunboost7,0)
Rule_AddOneShot(speedunboost8,0)
end

--req
function Req()
if (number_of_players==2) then
Rule_AddOneShot(Req2,0)
elseif (number_of_players==3) then
Rule_AddOneShot(Req3,0)
elseif (number_of_players==4) then
Rule_AddOneShot(Req4,0)
elseif (number_of_players==5) then
Rule_AddOneShot(Req5,0)
elseif (number_of_players==6) then
Rule_AddOneShot(Req6,0)
elseif (number_of_players==7) then
Rule_AddOneShot(Req7,0)
end
end


function Req2()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
		end
g_req=g_req + 10
	end

function Req3()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player3,true) then
       Rule_AddOneShot(player3req,0)
		end
g_req=g_req + 10
	end

function Req4()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player3,true) then
       Rule_AddOneShot(player3req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player4,true) then
        Rule_AddOneShot(player4req,0)
		end
g_req=g_req + 10
	end

function Req5()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player3,true) then
       Rule_AddOneShot(player3req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player4,true) then
        Rule_AddOneShot(player4req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player5,true) then
      Rule_AddOneShot(player5req,0)
		end
g_req=g_req + 10
	end

function Req6()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player3,true) then
       Rule_AddOneShot(player3req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player4,true) then
        Rule_AddOneShot(player4req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player5,true) then
      Rule_AddOneShot(player5req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player6,true) then
      Rule_AddOneShot(player6req,0)
		end
g_req=g_req + 10
	end

function Req7()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player3,true) then
       Rule_AddOneShot(player3req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player4,true) then
        Rule_AddOneShot(player4req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player5,true) then
      Rule_AddOneShot(player5req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player6,true) then
      Rule_AddOneShot(player6req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player7,true) then
       Rule_AddOneShot(player7req,0)
		end
g_req=g_req + 10
	end

function Req8()
if EGroup_IsCapturedByPlayer("eg_resource_point",g_Player1,true) then
        Rule_AddOneShot(player1req,0)
elseif  EGroup_IsCapturedByPlayer("eg_resource_point",g_Player2,true) then
       Rule_AddOneShot(player2req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player3,true) then
       Rule_AddOneShot(player3req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player4,true) then
        Rule_AddOneShot(player4req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player5,true) then
      Rule_AddOneShot(player5req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player6,true) then
      Rule_AddOneShot(player6req,0)
elseif EGroup_IsCapturedByPlayer("eg_resource_point",g_Player7,true) then
       Rule_AddOneShot(player7req,0)
		end
g_req=g_req + 10
	end


function player1req()
Player_AddResource(g_Player1,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player1req)
end

function player2req()
Player_AddResource(g_Player2,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player2req)
end

function player3req()
Player_AddResource(g_Player3,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player3req)
end

function player4req()
Player_AddResource(g_Player4,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player4req)
end

function player5req()
Player_AddResource(g_Player5,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player5req)
end

function player6req()
Player_AddResource(g_Player6,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player6req)
end

function player7req()
Player_AddResource(g_Player7,RT_Requisition,180)
EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7 controls the Ariel Highlands","Requisition Received")
Rule_Remove(player7req)
end



--popmod

function popcap()
if EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player1,true) then

       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls the Aceria Forests","Increased Manpower")
        Rule_AddOneShot(capping1,0)
elseif  EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player2,true) then
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls the Aceria Forests","Increased Manpower")
       Rule_AddOneShot(capping2,0)
elseif EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player3,true) then
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls the Aceria Forests","Increased Manpower")
       Rule_AddOneShot(capping3,0)
elseif EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player4,true) then
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls the Aceria Forests","Increased Manpower")
        Rule_AddOneShot(capping4,0)

elseif EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player5,true) then
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls the Aceria Forests","Increased Manpower")
      Rule_AddOneShot(capping5,0)

elseif EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player6,true) then
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls the Aceria Forests","Increased Manpower")
      Rule_AddOneShot(capping6,0)

elseif EGroup_IsCapturedByPlayer("eg_popcap_point",g_Player7,true) then
       EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7 controls the Aceria Forests","Increased Manpower")
       Rule_AddOneShot(capping7,0)
		end

	end



function Cap1()
g_capflag1 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap1,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap1,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player1)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player1)
Rule_AddOneShot(Do_Cap1,0)
end


function Do_Cap1()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap1,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap1,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player1)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player1)
end

function UnCap1()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap1,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap1,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player1)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player1)
Rule_AddOneShot(Do_UnCap1,0)
end


function Do_UnCap1()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap1,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap1,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player1)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player1)
end

function Cap2()
g_capflag2 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap2,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap2,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player2)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player2)
Rule_AddOneShot(Do_Cap2,0)
end


function Do_Cap2()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap2,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap2,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player2)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player2)
end

function Cap3()
g_capflag3 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap3,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap3,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player3)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player3)
Rule_AddOneShot(Do_Cap3,0)
end


function Do_Cap3()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap3,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap3,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player3)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player3)
end

function Cap4()
g_capflag4 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap4,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap4,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player4)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player4)
Rule_AddOneShot(Do_Cap4,0)
end


function Do_Cap4()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap4,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap4,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player4)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player4)
end

function Cap5()
g_capflag5 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap5,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap5,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player5)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player5)
Rule_AddOneShot(Do_Cap5,0)
end


function Do_Cap5()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap5,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap5,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player5)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player5)
end

function Cap6()
g_capflag6 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap6,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap6,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player6)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player6)
Rule_AddOneShot(Do_Cap6,0)
end


function Do_Cap6()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap6,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap6,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player6)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player6)
end


function Cap7()
g_capflag7 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap7,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap7,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player7)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player7)
Rule_AddOneShot(Do_Cap7,0)
end


function Do_Cap7()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap7,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap7,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player7)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player7)
end

function Cap8()
g_capflag8 = 1
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap8,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap8,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player8)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player8)
Rule_AddOneShot(Do_Cap8,0)
end


function Do_Cap8()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap8,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap8,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player8)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player8)
end



function capping1()
if (g_capflag1 == 1) then
g_cap1 = 0
elseif (g_capflag1 == 0)
then
g_cap1 = 5
end
Rule_AddOneShot(Cap1,0)
end


function capping2()
if (g_capflag2 == 1) then
g_cap2 = 0
elseif (g_capflag2 == 0)
then
g_cap2 = 5
end
Rule_AddOneShot(Cap2,0)
end

function capping3()
if (g_capflag3 == 1) then
g_cap3 = 0
elseif (g_capflag3 == 0)
then
g_cap3 = 5
end
Rule_AddOneShot(Cap3,0)
end

function capping4()
if (g_capflag4 == 1) then
g_cap4 = 0
elseif (g_capflag4 == 0)
then
g_cap4 = 5
end
Rule_AddOneShot(Cap4,0)
end

function capping5()
if (g_capflag5 == 1) then
g_cap5 = 0
elseif (g_capflag5 == 0)
then
g_cap5 = 5
end
Rule_AddOneShot(Cap5,0)
end

function capping6()
if (g_capflag6 == 1) then
g_cap6 = 0
elseif (g_capflag6 == 0)
then
g_cap6 = 5
end
Rule_AddOneShot(Cap6,0)
end

function capping7()
if (g_capflag7 == 1) then
g_cap7 = 0
elseif (g_capflag7 == 0)
then
g_cap7 = 5
end
Rule_AddOneShot(Cap7,0)
end

function capping8()
if (g_capflag8 == 1) then
g_cap8 = 0
elseif (g_capflag8 == 0)
then
g_cap8 = 5
end
Rule_AddOneShot(Cap8,0)
end

function uncapping1()
if (g_capflag1 == 1) then
g_cap1 = -5
elseif (g_capflag1 == 0)
then
g_cap1 = 0
end
g_capflag1 = 0
Rule_AddOneShot(UnCap1,0)
Rule_AddOneShot(uncapping2,0)

end

function UnCap2()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap2,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap2,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player2)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player2)
Rule_AddOneShot(Do_UnCap2,0)
end


function Do_UnCap2()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap2,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap2,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player2)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player2)
end

function UnCap3()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap3,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap3,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player3)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player3)
Rule_AddOneShot(Do_UnCap3,0)
end


function Do_UnCap3()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap3,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap3,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player3)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player3)
end

function UnCap4()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap4,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap4,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player4)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player4)
Rule_AddOneShot(Do_UnCap4,0)
end


function Do_UnCap4()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap4,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap4,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player4)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player4)
end

function UnCap5()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap5,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap5,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player5)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player5)
Rule_AddOneShot(Do_UnCap5,0)
end


function Do_UnCap5()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap5,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap5,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player5)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player5)
end

function UnCap6()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap6,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap6,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player6)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player6)
Rule_AddOneShot(Do_UnCap6,0)
end


function Do_UnCap6()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap6,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap6,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player6)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player6)
end

function UnCap7()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap7,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap7,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player7)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player7)
Rule_AddOneShot(Do_UnCap7,0)
end


function Do_UnCap7()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap7,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap7,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player7)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player7)
end

function UnCap8()
modifier_maxsquadcap_increase = Modifier_Create(MAT_Player, "max_squad_cap_player_modifier", MUT_Addition, false,g_cap8,"")
modifier_maxsupportcap_increase = Modifier_Create(MAT_Player, "max_support_cap_player_modifier", MUT_Addition, false,g_cap8,"")

Modifier_ApplyToPlayer(modifier_maxsquadcap_increase, g_Player8)
Modifier_ApplyToPlayer(modifier_maxsupportcap_increase, g_Player8)
Rule_AddOneShot(Do_UnCap8,0)
end


function Do_UnCap8()
	modifier_squadcap_increase = Modifier_Create(MAT_Player, "squad_cap_player_modifier", MUT_Addition, false,g_cap8,"")
	modifier_supportcap_increase = Modifier_Create(MAT_Player, "support_cap_player_modifier", MUT_Addition, false,g_cap8,"")

	Modifier_ApplyToPlayer(modifier_squadcap_increase,   g_Player8)
	Modifier_ApplyToPlayer(modifier_supportcap_increase, g_Player8)
Rule_AddOneShot(popcap,0)
end

function uncapping2()
if (g_capflag2 == 1) then
g_cap2 = -5
elseif (g_capflag2 == 0)
then
g_cap2 = 0
end
g_capflag2 = 0
Rule_AddOneShot(UnCap2,0)
if (number_of_players==2) then
Rule_AddOneShot(popcap,0)
elseif (number_of_players==3) then
Rule_AddOneShot(uncapping3,0)
elseif (number_of_players==4) then
Rule_AddOneShot(uncapping3,0)
elseif (number_of_players==5) then
Rule_AddOneShot(uncapping3,0)
elseif (number_of_players==6) then
Rule_AddOneShot(uncapping3,0)
elseif (number_of_players==7) then
Rule_AddOneShot(uncapping3,0)
end
end

function uncapping3()
if (g_capflag3 == 1) then
g_cap3 = -5
elseif (g_capflag3 == 0)
then
g_cap3 = 0
end
g_capflag3 = 0
Rule_AddOneShot(UnCap3,0)
if (number_of_players==3) then
Rule_AddOneShot(popcap,0)
elseif (number_of_players==4) then
Rule_AddOneShot(uncapping4,0)
elseif (number_of_players==5) then
Rule_AddOneShot(uncapping4,0)
elseif (number_of_players==6) then
Rule_AddOneShot(uncapping4,0)
elseif (number_of_players==7) then
Rule_AddOneShot(uncapping4,0)
end
end

function uncapping4()
if (g_capflag4 == 1) then
g_cap4 = -5
elseif (g_capflag4 == 0)
then
g_cap4 = 0
end
g_capflag4 = 0
Rule_AddOneShot(UnCap4,0)
if (number_of_players==4) then
Rule_AddOneShot(popcap,0)
elseif (number_of_players==5) then
Rule_AddOneShot(uncapping5,0)
elseif (number_of_players==6) then
Rule_AddOneShot(uncapping5,0)
elseif (number_of_players==7) then
Rule_AddOneShot(uncapping5,0)
end
end

function uncapping5()
if (g_capflag5 == 1) then
g_cap5 = -5
elseif (g_capflag5 == 0)
then
g_cap5 = 0
end
g_capflag5 = 0
Rule_AddOneShot(UnCap5,0)
if (number_of_players==5) then
Rule_AddOneShot(popcap,0)
elseif (number_of_players==6) then
Rule_AddOneShot(uncapping6,0)
elseif (number_of_players==7) then
Rule_AddOneShot(uncapping6,0)
end
end

function uncapping6()
if (g_capflag6 == 1) then
g_cap6 = -5
elseif (g_capflag6 == 0)
then
g_cap6 = 0
end
g_capflag6 = 0
Rule_AddOneShot(UnCap6,0)
if (number_of_players==6) then
Rule_AddOneShot(popcap,0)
elseif (number_of_players==7) then
Rule_AddOneShot(uncapping7,0)
end
end


function uncapping7()
if (g_capflag7 == 1) then
g_cap7 = -5
elseif (g_capflag7 == 0)
then
g_cap7 = 0
end
g_capflag7 = 0
Rule_AddOneShot(UnCap7,0)
Rule_AddOneShot(popcap,0)
end

function uncapping8()
if (g_capflag8 == 1) then
g_cap8 = -5
elseif (g_capflag8 == 0)
then
g_cap8 = 0
end
g_capflag8 = 0
Rule_AddOneShot(UnCap8,0)
end

--buildingmod



function buildcap1()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(buildcheck1,0)

          EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 1 controls the Hyperion Peaks","Building ability increased")
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(buildcheck2,0)
        EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 2 controls the Hyperion Peaks","Building ability increased")
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(buildcheck3,0)
        EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 3 controls the Hyperion Peaks","Building ability increased")
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player4,true) then
        Rule_AddOneShot(buildcheck4,0)
        EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 4 controls the Hyperion Peaks","Building ability increased")
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player5,true) then
        Rule_AddOneShot(buildcheck5,0)
        EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 5 controls the Hyperion Peaks","Building ability increased")
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player6,true) then
        Rule_AddOneShot(buildcheck6,0)
        EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 6 controls the Hyperion Peaks","Building ability increased")
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player7,true) then
        Rule_AddOneShot(buildcheck7,0)
        EventCue_DoEvent ("recruit_commander", "/event_cue_notifications/cheats!", "Player 7 controls the Hyperion Peaks","Building ability increased")
		end
		end


function buildcap2()
	
if (number_of_players==2) then
Rule_AddOneShot(buildcap3,0)
elseif (number_of_players==3) then
Rule_AddOneShot(buildcap4,0)
elseif (number_of_players==4) then
Rule_AddOneShot(buildcap5,0)
elseif (number_of_players==5) then
Rule_AddOneShot(buildcap6,0)
elseif (number_of_players==6) then
Rule_AddOneShot(buildcap7,0)
elseif (number_of_players==7) then
Rule_AddOneShot(buildcap8,0)
end
end

function buildcap3()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
		end
		end

function buildcap4()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(builder3,0)
		end
		end

function buildcap5()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(builder3,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player4,true) then
        Rule_AddOneShot(builder4,0)
		end
		end

function buildcap6()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(builder3,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player4,true) then
        Rule_AddOneShot(builder4,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player5,true) then
        Rule_AddOneShot(builder5,0)
		end
		end

function buildcap7()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(builder3,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player4,true) then
        Rule_AddOneShot(builder4,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player5,true) then
        Rule_AddOneShot(builder5,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player6,true) then
        Rule_AddOneShot(builder6,0)

		end
		end

function buildcap8()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(builder3,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player4,true) then
        Rule_AddOneShot(builder4,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player5,true) then
        Rule_AddOneShot(builder5,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player6,true) then
        Rule_AddOneShot(builder6,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player7,true) then
        Rule_AddOneShot(builder7,0)
		end
		end

function buildcap9()
	
if EGroup_IsCapturedByPlayer("eg_base_point",g_Player1,true) then
        Rule_AddOneShot(builder1,0)
elseif  EGroup_IsCapturedByPlayer("eg_base_point",g_Player2,true) then
        Rule_AddOneShot(builder2,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player3,true) then
        Rule_AddOneShot(builder3,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player4,true) then
        Rule_AddOneShot(builder4,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player5,true) then
        Rule_AddOneShot(builder5,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player6,true) then
        Rule_AddOneShot(builder6,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player7,true) then
        Rule_AddOneShot(builder7,0)
elseif EGroup_IsCapturedByPlayer("eg_base_point",g_Player8,true) then
        Rule_AddOneShot(builder8,0)
		end
		end

function builder1()
if (g_player1race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player1race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player1race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player1race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player1race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player1race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player1race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player1race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player1race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player1race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player1race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player1race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player1, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end

function builder2()
if (g_player2race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player2race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player2race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player2race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player2race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player2race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player2race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player2race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player2race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player2race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player2race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player2race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player2, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end

function builder3()
if (g_player3race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player3race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player3race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player3race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player3race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player3race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player3race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player3race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player3race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player3race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player3race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player3race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player3, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end


function builder4()
if (g_player4race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player4race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player4race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player4race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player4race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player4race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player4race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player4race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player4race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player4race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player4race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player4race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player4, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end

function builder5()
if (g_player5race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player5race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player5race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player5race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player5race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player5race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player5race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player5race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player5race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player5race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player5race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player5race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player5, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end


function builder6()
if (g_player6race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player6race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player6race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player6race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player6race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player6race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player6race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player6race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player6race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player6race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player6race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player6race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player6, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end


function builder7()
if (g_player7race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player7race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player7race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player7race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player7race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player7race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player7race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player7race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player7race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player7race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player7race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player7race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player7, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end

function builder8()
if (g_player8race == "eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "eldar_squad_bonesinger", "builders", 1, 1)
elseif (g_player8race == "necron_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "necron_builder_scarab_squad", "builders", 1, 1)
elseif (g_player8race == "guard_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "guard_squad_enginseer", "builders", 1, 1)
elseif (g_player8race == "ork_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "ork_squad_grot", "builders", 1, 1)
elseif (g_player8race == "chaos_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "chaos_squad_slave", "builders", 1, 1)
elseif (g_player8race == "tau_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "tau_builder_squad", "builders", 1, 1)
elseif (g_player8race == "space_marine_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "space_marine_squad_servitor", "builders", 1, 1)
elseif (g_player8race == "sisters_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "sisters_squad_servitor", "builders", 1, 1)
elseif (g_player8race == "dark_eldar_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "dark_eldar_squad_slave", "builders", 1, 1)
elseif (g_player8race == "blacktemplar_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "templar_servitor", "builders", 1, 1)
elseif (g_player8race == "steel_legion_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "steel_legion_infantry_pioneer","builders", 1, 1)
elseif (g_player8race == "inquisition_daemonhunt_race") then
Util_CreateSquadsAtMarkerEx(g_Player8, "ranger", "inquisition_archivist", "builders", 1, 1)
end
end



function Rule_buildboost1()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",

}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build1, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player1 )

end
end 

function Rule_buildboost2()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build2, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player2 )

end
end 

function Rule_buildboost3()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build3, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player3 )

end
end 

function Rule_buildboost4()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build4, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player4 )

end
end 

function Rule_buildboost5()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build5, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player5 )

end
end 

function Rule_buildboost6()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build6, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player6 )

end
end 

function Rule_buildboost7()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build7, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player7 )

end
end 

function Rule_buildboost8()
squad_list = 
{
"eldar_bonesinger",
"chaos_slave",
"ork_grot",
"ork_mek_boy",
"guard_support_enginseer",
"servitor",
"tau_builder",
"sisters_servitor",
"dark_eldar_support_slave",
"templar_servitor",
"steel_legion_tank_trojan",
"inquisition_archivist",
}
modifiers = {}

for i=1,table.getn( squad_list ) do

  
    local modifier = Modifier_Create(MAT_EntityType, "repair_rate_modifier", MUT_Multiplication, false, g_build8, 
        squad_list[i]                       
    )
    
    modifiers[i] = Modifier_ApplyToPlayer( modifier, g_Player8 )

end
end 

function buildunboost1()
if (g_buildflag1 == 1) then
g_build1=0.8333339
Rule_AddOneShot(Rule_buildboost1,0)
g_buildflag1 = 0
end
Rule_AddOneShot(buildunboost2,0)
end

function buildcheck1()
if (g_buildflag1 == 0) then
Rule_AddOneShot(build1new,0)
elseif (g_buildflag1 == 1)
then
Rule_AddOneShot(build1old,0)
end
end


function build1new()
g_buildflag1 = 1
g_build1= 1.2
Rule_AddOneShot(Rule_buildboost1,0)
end

function build1old()
g_build1= 1
Rule_AddOneShot(Rule_buildboost1,0)
end

function buildunboost2()
if (g_buildflag2 == 1) then
g_build2=0.8333339
Rule_AddOneShot(Rule_buildboost2,0)
g_buildflag2 = 0
end
if (number_of_players==2) then
Rule_AddOneShot(buildcap1,0)
elseif (number_of_players==3) then
Rule_AddOneShot(buildunboost3,0)
elseif (number_of_players==4) then
Rule_AddOneShot(buildunboost3,0)
elseif (number_of_players==5) then
Rule_AddOneShot(buildunboost3,0)
elseif (number_of_players==6) then
Rule_AddOneShot(buildunboost3,0)
elseif (number_of_players==7) then
Rule_AddOneShot(buildunboost3,0)
end
end

function buildcheck2()
if (g_buildflag2 == 0) then
Rule_AddOneShot(build2new,0)
elseif (g_buildflag2 == 1)
then
Rule_AddOneShot(build2old,0)
end
end


function build2new()
g_buildflag2 = 1
g_build2= 1.2
Rule_AddOneShot(Rule_buildboost2,0)
end

function build2old()
g_build2= 1
Rule_AddOneShot(Rule_buildboost2,0)
end

function buildunboost3()
if (g_buildflag3 == 1) then
g_build3=0.8333339
Rule_AddOneShot(Rule_buildboost3,0)
g_buildflag3 = 0
end
if (number_of_players==3) then
Rule_AddOneShot(buildcap1,0)
elseif (number_of_players==4) then
Rule_AddOneShot(buildunboost4,0)
elseif (number_of_players==5) then
Rule_AddOneShot(buildunboost4,0)
elseif (number_of_players==6) then
Rule_AddOneShot(buildunboost4,0)
elseif (number_of_players==7) then
Rule_AddOneShot(buildunboost4,0)
end
end

function buildcheck3()
if (g_buildflag3 == 0) then
Rule_AddOneShot(build3new,0)
elseif (g_buildflag3 == 1)
then
Rule_AddOneShot(build3old,0)
end
end


function build3new()
g_buildflag3 = 1
g_build3= 1.2
Rule_AddOneShot(Rule_buildboost3,0)
end

function build3old()
g_build3= 1
Rule_AddOneShot(Rule_buildboost3,0)
end

function buildunboost4()
if (g_buildflag4 == 1) then
g_build4=0.8333339
Rule_AddOneShot(Rule_buildboost4,0)
g_buildflag4 = 0
end
if (number_of_players==4) then
Rule_AddOneShot(buildcap1,0)
elseif (number_of_players==5) then
Rule_AddOneShot(buildunboost5,0)
elseif (number_of_players==6) then
Rule_AddOneShot(buildunboost5,0)
elseif (number_of_players==7) then
Rule_AddOneShot(buildunboost5,0)
end
end

function buildcheck4()
if (g_buildflag4 == 0) then
Rule_AddOneShot(build4new,0)
elseif (g_buildflag4 == 1)
then
Rule_AddOneShot(build4old,0)
end
end


function build4new()
g_buildflag4 = 1
g_build4= 1.2
Rule_AddOneShot(Rule_buildboost4,0)
end

function build4old()
g_build4= 1
Rule_AddOneShot(Rule_buildboost4,0)
end

function buildunboost5()
if (g_buildflag5 == 1) then
g_build5=0.8333339
Rule_AddOneShot(Rule_buildboost5,0)
g_buildflag5 = 0
end
if (number_of_players==5) then
Rule_AddOneShot(buildcap1,0)
elseif (number_of_players==6) then
Rule_AddOneShot(buildunboost6,0)
elseif (number_of_players==7) then
Rule_AddOneShot(buildunboost6,0)
end
end

function buildcheck5()
if (g_buildflag5 == 0) then
Rule_AddOneShot(build5new,0)
elseif (g_buildflag5 == 1)
then
Rule_AddOneShot(build5old,0)
end
end


function build5new()
g_buildflag5 = 1
g_build5= 1.2
Rule_AddOneShot(Rule_buildboost5,0)
end

function build5old()
g_build5= 1
Rule_AddOneShot(Rule_buildboost5,0)
end

function buildunboost6()
if (g_buildflag6 == 1) then
g_build6=0.8333339
Rule_AddOneShot(Rule_buildboost6,0)
g_buildflag6 = 0
end
if (number_of_players==6) then
Rule_AddOneShot(buildcap1,0)
elseif (number_of_players==7) then
Rule_AddOneShot(buildunboost7,0)
end
end

function buildcheck6()
if (g_buildflag6 == 0) then
Rule_AddOneShot(build6new,0)
elseif (g_buildflag6 == 1)
then
Rule_AddOneShot(build6old,0)
end
end


function build6new()
g_buildflag6 = 1
g_build6= 1.2
Rule_AddOneShot(Rule_buildboost6,0)
end

function build6old()
g_build6= 1
Rule_AddOneShot(Rule_buildboost6,0)
end

function buildunboost7()
if (g_buildflag7 == 1) then
g_build7=0.8333339
Rule_AddOneShot(Rule_buildboost7,0)
g_buildflag7 = 0
end
Rule_AddOneShot(buildcap1,0)
end

function buildcheck7()
if (g_buildflag7 == 0) then
Rule_AddOneShot(build7new,0)
elseif (g_buildflag7 == 1)
then
Rule_AddOneShot(build7old,0)
end
end


function build7new()
g_buildflag7 = 1
g_build7= 1.2
Rule_AddOneShot(Rule_buildboost7,0)
end

function build7old()
g_build7= 1
Rule_AddOneShot(Rule_buildboost7,0)
end

function buildunboost8()
if (g_buildflag8 == 1) then
g_build8=0.8333339
Rule_AddOneShot(Rule_buildboost8,0)
g_buildflag8 = 0
end
Rule_AddOneShot(buildcap1,0)
end

function buildcheck8()
if (g_buildflag8 == 0) then
Rule_AddOneShot(build8new,0)
elseif (g_buildflag8 == 1)
then
Rule_AddOneShot(build8old,0)
end
end


function build8new()
g_buildflag8 = 1
g_build8= 1.2
Rule_AddOneShot(Rule_buildboost8,0)
end

function build8old()
g_build8= 1
Rule_AddOneShot(Rule_buildboost8,0)
end

function buildreset()
Rule_AddOneShot(buildunboost1,0)
Rule_AddOneShot(buildunboost2,0)
Rule_AddOneShot(buildunboost3,0)
Rule_AddOneShot(buildunboost4,0)
Rule_AddOneShot(buildunboost5,0)
Rule_AddOneShot(buildunboost6,0)
Rule_AddOneShot(buildunboost7,0)
Rule_AddOneShot(buildunboost8,0)
end


--teleporter

function restoreteleporter1()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player1,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter2()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player2,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter3()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player3,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter4()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player4,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter5()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player5,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter6()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player6,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter7()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player7,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end

function restoreteleporter8()
if EGroup_Exists("teleport") and EGroup_Count(EGroup_FromName("teleport"))==0 then
Entity_CreateBuildingMarker(g_Player8,"teleport", "space_marine_orbital_relay","portmark", 1)
end
end



--bloodpulse
function BabyBloodPulse()
--Maybe I should rename this?
			Util_MarkerFX("pulse", "data:Art/Events/Chaos/Blood_Pulse")

	end



--bloodcurtain
function bloodcurtain()
if (number_of_players==2) then
Rule_AddInterval(blood1,1)
Rule_AddInterval(blood2,1)
elseif (number_of_players==3) then
Rule_AddInterval(blood1,1)
Rule_AddInterval(blood2,1)
Rule_AddInterval(blood3,1)
elseif (number_of_players==4) then
Rule_AddInterval(blood1,1)
Rule_AddInterval(blood2,1)
Rule_AddInterval(blood3,1)
Rule_AddInterval(blood4,1)
elseif (number_of_players==5) then
Rule_AddInterval(blood1,1)
Rule_AddInterval(blood2,1)
Rule_AddInterval(blood3,1)
Rule_AddInterval(blood4,1)
Rule_AddInterval(blood5,1)
elseif (number_of_players==6) then
Rule_AddInterval(blood1,1)
Rule_AddInterval(blood2,1)
Rule_AddInterval(blood3,1)
Rule_AddInterval(blood4,1)
Rule_AddInterval(blood5,1)
Rule_AddInterval(blood6,1)
elseif (number_of_players==7) then
Rule_AddInterval(blood1,1)
Rule_AddInterval(blood2,1)
Rule_AddInterval(blood3,1)
Rule_AddInterval(blood4,1)
Rule_AddInterval(blood5,1)
Rule_AddInterval(blood6,1)
Rule_AddInterval(blood7,1)
end
end


function blood1 ()
Player_GetAllSquadsNearMarker( g_Player1, "sg_Potentials11", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials11"))

Player_GetAllSquadsNearMarker( g_Player1, "sg_Potentials12", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials12"))
Player_GetAllSquadsNearMarker( g_Player1, "sg_Potentials13", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials13"))
Player_GetAllSquadsNearMarker( g_Player1, "sg_Potentials14", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials14"))
Player_GetAllSquadsNearMarker( g_Player1, "sg_Potentials15", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials15"))
Player_GetAllSquadsNearMarker( g_Player1, "sg_Potentials16", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials16"))
SGroup_Clear("sg_Potentials11")
SGroup_Clear("sg_Potentials12")
SGroup_Clear("sg_Potentials13")
SGroup_Clear("sg_Potentials14")
SGroup_Clear("sg_Potentials15")
SGroup_Clear("sg_Potentials16")
end

function blood2 ()
Player_GetAllSquadsNearMarker( g_Player2, "sg_Potentials21", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials21"))

Player_GetAllSquadsNearMarker( g_Player2, "sg_Potentials22", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials22"))
Player_GetAllSquadsNearMarker( g_Player2, "sg_Potentials23", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials23"))
Player_GetAllSquadsNearMarker( g_Player2, "sg_Potentials24", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials24"))
Player_GetAllSquadsNearMarker( g_Player2, "sg_Potentials25", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials25"))
Player_GetAllSquadsNearMarker( g_Player2, "sg_Potentials26", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials26"))
SGroup_Clear("sg_Potentials21")
SGroup_Clear("sg_Potentials22")
SGroup_Clear("sg_Potentials23")
SGroup_Clear("sg_Potentials24")
SGroup_Clear("sg_Potentials25")
SGroup_Clear("sg_Potentials26")
end

function blood3 ()
Player_GetAllSquadsNearMarker( g_Player3, "sg_Potentials31", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials31"))

Player_GetAllSquadsNearMarker( g_Player3, "sg_Potentials32", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials32"))
Player_GetAllSquadsNearMarker( g_Player3, "sg_Potentials33", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials33"))
Player_GetAllSquadsNearMarker( g_Player3, "sg_Potentials34", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials34"))
Player_GetAllSquadsNearMarker( g_Player3, "sg_Potentials35", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials35"))
Player_GetAllSquadsNearMarker( g_Player3, "sg_Potentials36", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials36"))
SGroup_Clear("sg_Potentials31")
SGroup_Clear("sg_Potentials32")
SGroup_Clear("sg_Potentials33")
SGroup_Clear("sg_Potentials34")
SGroup_Clear("sg_Potentials35")
SGroup_Clear("sg_Potentials36")
end

function blood4 ()
Player_GetAllSquadsNearMarker( g_Player4, "sg_Potentials41", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials41"))

Player_GetAllSquadsNearMarker( g_Player4, "sg_Potentials42", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials42"))
Player_GetAllSquadsNearMarker( g_Player4, "sg_Potentials43", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials43"))
Player_GetAllSquadsNearMarker( g_Player4, "sg_Potentials44", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials44"))
Player_GetAllSquadsNearMarker( g_Player4, "sg_Potentials45", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials45"))
Player_GetAllSquadsNearMarker( g_Player4, "sg_Potentials46", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials46"))
SGroup_Clear("sg_Potentials41")
SGroup_Clear("sg_Potentials42")
SGroup_Clear("sg_Potentials43")
SGroup_Clear("sg_Potentials44")
SGroup_Clear("sg_Potentials45")
SGroup_Clear("sg_Potentials46")
end

function blood5 ()
Player_GetAllSquadsNearMarker( g_Player5, "sg_Potentials51", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials51"))

Player_GetAllSquadsNearMarker( g_Player5, "sg_Potentials52", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials52"))
Player_GetAllSquadsNearMarker( g_Player5, "sg_Potentials53", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials53"))
Player_GetAllSquadsNearMarker( g_Player5, "sg_Potentials54", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials54"))
Player_GetAllSquadsNearMarker( g_Player5, "sg_Potentials55", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials55"))
Player_GetAllSquadsNearMarker( g_Player5, "sg_Potentials56", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials56"))
SGroup_Clear("sg_Potentials51")
SGroup_Clear("sg_Potentials52")
SGroup_Clear("sg_Potentials53")
SGroup_Clear("sg_Potentials54")
SGroup_Clear("sg_Potentials55")
SGroup_Clear("sg_Potentials56")
end

function blood6 ()
Player_GetAllSquadsNearMarker( g_Player6, "sg_Potentials61", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials61"))

Player_GetAllSquadsNearMarker( g_Player6, "sg_Potentials62", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials62"))
Player_GetAllSquadsNearMarker( g_Player6, "sg_Potentials63", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials63"))
Player_GetAllSquadsNearMarker( g_Player6, "sg_Potentials64", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials64"))
Player_GetAllSquadsNearMarker( g_Player6, "sg_Potentials65", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials65"))
Player_GetAllSquadsNearMarker( g_Player6, "sg_Potentials66", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials66"))
SGroup_Clear("sg_Potentials61")
SGroup_Clear("sg_Potentials62")
SGroup_Clear("sg_Potentials63")
SGroup_Clear("sg_Potentials64")
SGroup_Clear("sg_Potentials65")
SGroup_Clear("sg_Potentials66")
end

function blood7 ()
Player_GetAllSquadsNearMarker( g_Player7, "sg_Potentials71", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials71"))

Player_GetAllSquadsNearMarker( g_Player7, "sg_Potentials72", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials72"))
Player_GetAllSquadsNearMarker( g_Player7, "sg_Potentials73", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials73"))
Player_GetAllSquadsNearMarker( g_Player7, "sg_Potentials74", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials74"))
Player_GetAllSquadsNearMarker( g_Player7, "sg_Potentials75", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials75"))
Player_GetAllSquadsNearMarker( g_Player7, "sg_Potentials76", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials76"))
SGroup_Clear("sg_Potentials71")
SGroup_Clear("sg_Potentials72")
SGroup_Clear("sg_Potentials73")
SGroup_Clear("sg_Potentials74")
SGroup_Clear("sg_Potentials75")
SGroup_Clear("sg_Potentials76")
end

function blood8 ()
Player_GetAllSquadsNearMarker( g_Player8, "sg_Potentials81", "blood1" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials81"))

Player_GetAllSquadsNearMarker( g_Player8, "sg_Potentials82", "blood2" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials82"))
Player_GetAllSquadsNearMarker( g_Player8, "sg_Potentials83", "blood3" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials83"))
Player_GetAllSquadsNearMarker( g_Player8, "sg_Potentials84", "blood4" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials84"))
Player_GetAllSquadsNearMarker( g_Player8, "sg_Potentials85", "blood5" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials85"))
Player_GetAllSquadsNearMarker( g_Player8, "sg_Potentials86", "blood6" )
		World_FXEventSquad("data:Art/Events/Chaos/Blood_Pulse_Hit", SGroup_FromName("sg_Potentials86"))
SGroup_Clear("sg_Potentials81")
SGroup_Clear("sg_Potentials82")
SGroup_Clear("sg_Potentials83")
SGroup_Clear("sg_Potentials84")
SGroup_Clear("sg_Potentials85")
SGroup_Clear("sg_Potentials86")
end








--dear God...is this the end?